{"ast":null,"code":"var _jsxFileName = \"/home/khazad/Development/sd-011-project-recipes-app/src/components/CategoryButtons.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useContext, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport getCategories from '../services/categoriesAPI';\nimport getCategory from '../services/categoryAPI';\nimport RecipeAppContext from '../context/RecipeAppContext';\nimport '../css/Header.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CategoryButtons(_ref) {\n  _s();\n  let {\n    foods,\n    drinks\n  } = _ref;\n  const {\n    setFoodCategory,\n    setDrinkCategory,\n    drinkCategoryList,\n    foodCategoryList,\n    setDrinksList,\n    setFoodList,\n    setToggleOn,\n    toggleOn\n  } = useContext(RecipeAppContext);\n  const [btnName, setBtnName] = useState('');\n  useEffect(() => {\n    const foodCatEndpoint = 'https://www.themealdb.com/api/json/v1/1/list.php?c=list';\n    const drinkCatEndpoint = 'https://www.thecocktaildb.com/api/json/v1/1/list.php?c=list';\n    if (foods) {\n      const getCategoriesFromAPI = async () => {\n        const {\n          meals\n        } = await getCategories(foodCatEndpoint);\n        setFoodCategory(meals);\n      };\n      getCategoriesFromAPI();\n    } else if (drinks) {\n      const getCategoriesFromAPI = async () => {\n        const data = await getCategories(drinkCatEndpoint);\n        const drinkCategory = data.drinks;\n        setDrinkCategory(drinkCategory);\n      };\n      getCategoriesFromAPI();\n    }\n  }, []);\n  const filterDrinkCategory = async _ref2 => {\n    let {\n      target\n    } = _ref2;\n    const {\n      name\n    } = target;\n    const endpoint = `https://www.thecocktaildb.com/api/json/v1/1/filter.php?c=${name}`;\n    if (!toggleOn) {\n      const data = await getCategory(endpoint);\n      setDrinksList(data.drinks);\n      setBtnName(name);\n      setToggleOn(true);\n    }\n    if (toggleOn && name === btnName) {\n      setToggleOn(false);\n    }\n    if (toggleOn && name !== btnName) {\n      const data = await getCategory(endpoint);\n      setDrinksList(data.drinks);\n      setBtnName(name);\n    }\n  };\n  const filterFoodCategory = async _ref3 => {\n    let {\n      target\n    } = _ref3;\n    const {\n      name\n    } = target;\n    const endpoint = `https://www.themealdb.com/api/json/v1/1/filter.php?c=${name}`;\n    if (!toggleOn) {\n      const data = await getCategory(endpoint);\n      setFoodList(data.meals);\n      setBtnName(name);\n      setToggleOn(true);\n    }\n    if (toggleOn && name === btnName) {\n      setToggleOn(false);\n    }\n    if (toggleOn && name !== btnName) {\n      const data = await getCategory(endpoint);\n      setFoodList(data.meals);\n      setBtnName(name);\n    }\n  };\n  const renderDrinkCategoryButton = type => {\n    const maxLength = 4;\n    const list = type.map((category, index) => {\n      if (index <= maxLength) {\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          name: category.strCategory,\n          \"data-testid\": `${category.strCategory}-category-filter`,\n          onClick: e => filterDrinkCategory(e),\n          className: \"button-food\",\n          children: `${category.strCategory}`\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this);\n      }\n      return null;\n    });\n    return list;\n  };\n  const renderFoodCategoryButton = type => {\n    const maxLength = 4;\n    const list = type.map((category, index) => {\n      if (index <= maxLength) {\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          name: category.strCategory,\n          \"data-testid\": `${category.strCategory}-category-filter`,\n          onClick: e => filterFoodCategory(e),\n          className: \"button-food\",\n          children: `${category.strCategory}`\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this);\n      }\n      return null;\n    });\n    return list;\n  };\n  const renderAllButton = () => /*#__PURE__*/_jsxDEV(\"button\", {\n    type: \"button\",\n    onClick: () => setToggleOn(false),\n    \"data-testid\": \"All-category-filter\",\n    className: \"button-food\",\n    children: \"All\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"category-buttons\",\n    children: [foods && renderAllButton(), foods && foodCategoryList && renderFoodCategoryButton(foodCategoryList), drinks && renderAllButton(), drinks && drinkCategoryList && renderDrinkCategoryButton(drinkCategoryList)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 5\n  }, this);\n}\n_s(CategoryButtons, \"h7A+ImxVaYlSIKaxyecWCYKnGXQ=\");\n_c = CategoryButtons;\nCategoryButtons.propTypes = {\n  foods: PropTypes.bool.isRequired,\n  drinks: PropTypes.bool.isRequired\n};\nexport default CategoryButtons;\nvar _c;\n$RefreshReg$(_c, \"CategoryButtons\");","map":{"version":3,"names":["React","useEffect","useContext","useState","PropTypes","getCategories","getCategory","RecipeAppContext","CategoryButtons","foods","drinks","setFoodCategory","setDrinkCategory","drinkCategoryList","foodCategoryList","setDrinksList","setFoodList","setToggleOn","toggleOn","btnName","setBtnName","foodCatEndpoint","drinkCatEndpoint","getCategoriesFromAPI","meals","data","drinkCategory","filterDrinkCategory","target","name","endpoint","filterFoodCategory","renderDrinkCategoryButton","type","maxLength","list","map","category","index","strCategory","e","renderFoodCategoryButton","renderAllButton","propTypes","bool","isRequired"],"sources":["/home/khazad/Development/sd-011-project-recipes-app/src/components/CategoryButtons.js"],"sourcesContent":["import React, { useEffect, useContext, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport getCategories from '../services/categoriesAPI';\nimport getCategory from '../services/categoryAPI';\nimport RecipeAppContext from '../context/RecipeAppContext';\nimport '../css/Header.css';\n\nfunction CategoryButtons({ foods, drinks }) {\n  const { setFoodCategory,\n    setDrinkCategory,\n    drinkCategoryList,\n    foodCategoryList,\n    setDrinksList,\n    setFoodList,\n    setToggleOn,\n    toggleOn,\n  } = useContext(RecipeAppContext);\n  const [btnName, setBtnName] = useState('');\n\n  useEffect(() => {\n    const foodCatEndpoint = 'https://www.themealdb.com/api/json/v1/1/list.php?c=list';\n    const drinkCatEndpoint = 'https://www.thecocktaildb.com/api/json/v1/1/list.php?c=list';\n    if (foods) {\n      const getCategoriesFromAPI = async () => {\n        const { meals } = await getCategories(foodCatEndpoint);\n        setFoodCategory(meals);\n      };\n      getCategoriesFromAPI();\n    } else if (drinks) {\n      const getCategoriesFromAPI = async () => {\n        const data = await getCategories(drinkCatEndpoint);\n        const drinkCategory = data.drinks;\n        setDrinkCategory(drinkCategory);\n      };\n      getCategoriesFromAPI();\n    }\n  }, []);\n\n  const filterDrinkCategory = async ({ target }) => {\n    const { name } = target;\n    const endpoint = `https://www.thecocktaildb.com/api/json/v1/1/filter.php?c=${name}`;\n    if (!toggleOn) {\n      const data = await getCategory(endpoint);\n      setDrinksList(data.drinks);\n      setBtnName(name);\n      setToggleOn(true);\n    } if (toggleOn && name === btnName) {\n      setToggleOn(false);\n    } if (toggleOn && name !== btnName) {\n      const data = await getCategory(endpoint);\n      setDrinksList(data.drinks);\n      setBtnName(name);\n    }\n  };\n\n  const filterFoodCategory = async ({ target }) => {\n    const { name } = target;\n    const endpoint = `https://www.themealdb.com/api/json/v1/1/filter.php?c=${name}`;\n    if (!toggleOn) {\n      const data = await getCategory(endpoint);\n      setFoodList(data.meals);\n      setBtnName(name);\n      setToggleOn(true);\n    } if (toggleOn && name === btnName) {\n      setToggleOn(false);\n    } if (toggleOn && name !== btnName) {\n      const data = await getCategory(endpoint);\n      setFoodList(data.meals);\n      setBtnName(name);\n    }\n  };\n\n  const renderDrinkCategoryButton = (type) => {\n    const maxLength = 4;\n    const list = type.map((category, index) => {\n      if (index <= maxLength) {\n        return (\n          <button\n            type=\"button\"\n            key={ index }\n            name={ category.strCategory }\n            data-testid={ `${category.strCategory}-category-filter` }\n            onClick={ (e) => filterDrinkCategory(e) }\n            className=\"button-food\"\n          >\n            {`${category.strCategory}`}\n          </button>\n        );\n      }\n      return null;\n    });\n    return list;\n  };\n\n  const renderFoodCategoryButton = (type) => {\n    const maxLength = 4;\n    const list = type.map((category, index) => {\n      if (index <= maxLength) {\n        return (\n          <button\n            type=\"button\"\n            key={ index }\n            name={ category.strCategory }\n            data-testid={ `${category.strCategory}-category-filter` }\n            onClick={ (e) => filterFoodCategory(e) }\n            className=\"button-food\"\n          >\n            {`${category.strCategory}`}\n          </button>\n        );\n      }\n      return null;\n    });\n    return list;\n  };\n\n  const renderAllButton = () => (\n    <button\n      type=\"button\"\n      onClick={ () => setToggleOn(false) }\n      data-testid=\"All-category-filter\"\n      className=\"button-food\"\n    >\n      All\n    </button>\n  );\n\n  return (\n    <div className=\"category-buttons\">\n      {foods && renderAllButton()}\n      {foods && foodCategoryList && renderFoodCategoryButton(foodCategoryList)}\n      {drinks && renderAllButton()}\n      {drinks && drinkCategoryList && renderDrinkCategoryButton(drinkCategoryList)}\n    </div>\n  );\n}\n\nCategoryButtons.propTypes = {\n  foods: PropTypes.bool.isRequired,\n  drinks: PropTypes.bool.isRequired,\n};\n\nexport default CategoryButtons;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}