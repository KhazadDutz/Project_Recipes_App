{"ast":null,"code":"var _jsxFileName = \"/home/khazad/Development/sd-011-project-recipes-app/src/pages/FoodsDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useContext, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport getMealById from '../services/getMealById';\nimport randomRecipe from '../services/randomRecipe';\nimport RecipeDetailsButton from '../components/RecipeDetailsButton';\nimport RecipeAppContext from '../context/RecipeAppContext';\nimport RenderFoodDetails from '../components/RenderFoodDetails';\nimport RenderFoodIngred from '../components/RenderFoodIngred';\nimport RenderFoodInstruction from '../components/RenderFoodInstruction';\nimport RenderFoodVideo from '../components/RenderFoodVideo';\nimport RenderFoodRecomendation from '../components/RenderFoodRecomendation';\n// import checkIsRecipeDone from '../components/checkIsRecipeDone';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst copy = require('clipboard-copy');\nfunction FoodsDetails(props) {\n  _s();\n  const {\n    match: {\n      params: {\n        id\n      }\n    }\n  } = props;\n  const [click, setClick] = useState(false);\n  const {\n    meal,\n    setMeal,\n    recomDrink,\n    setRecomDrink,\n    setIsRecipeDone,\n    isRecipeDone,\n    setInProgressRecipes\n  } = useContext(RecipeAppContext);\n  function copyLink(drinkId) {\n    copy(`http://localhost:3000/comidas/${drinkId}`);\n    setClick(true);\n  }\n  useEffect(() => {\n    const endpoint = `https://www.themealdb.com/api/json/v1/1/lookup.php?i=${id}`;\n    const getMealDetails = async () => {\n      const {\n        meals\n      } = await getMealById(endpoint);\n      setMeal(meals[0]);\n    };\n    const getRandomMeal = async () => {\n      const {\n        drinks\n      } = await randomRecipe('thecocktaildb');\n      setRecomDrink(drinks);\n    };\n    getMealDetails();\n    getRandomMeal();\n  }, []);\n  function checkIsRecipeDone(arrayDoneRecipe, currentMeal) {\n    const arrayLS = arrayDoneRecipe && arrayDoneRecipe.some(recipe => recipe.id === Number(currentMeal.idMeal));\n    return arrayLS;\n  }\n  function checkInRecipeInProgress(InProgress, currentMeal) {\n    const arrayLS = Object.keys(InProgress);\n    const checkedArray = arrayLS.some(recipeID => recipeID === currentMeal.idMeal);\n    return checkedArray;\n  }\n  useEffect(() => {\n    const inProgressRecipesLS = JSON.parse(localStorage.getItem('inProgressRecipes'));\n    const DoneRecipesLS = JSON.parse(localStorage.getItem('doneRecipes'));\n    const checkedDoneRecipes = checkIsRecipeDone(DoneRecipesLS, meal);\n    setIsRecipeDone(checkedDoneRecipes);\n    if (inProgressRecipesLS && !checkedDoneRecipes) {\n      if (!inProgressRecipesLS.meals) return setInProgressRecipes(false);\n      const checkedInProgressRecipes = checkInRecipeInProgress(inProgressRecipesLS.meals, meal);\n      setInProgressRecipes(checkedInProgressRecipes);\n    }\n  }, [meal]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [meal && /*#__PURE__*/_jsxDEV(RenderFoodDetails, {\n      copyLink: copyLink\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: click ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Link copiado!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 22\n      }, this) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), meal && /*#__PURE__*/_jsxDEV(RenderFoodIngred, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 16\n    }, this), meal && /*#__PURE__*/_jsxDEV(RenderFoodInstruction, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 16\n    }, this), meal && /*#__PURE__*/_jsxDEV(RenderFoodVideo, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 16\n    }, this), recomDrink && /*#__PURE__*/_jsxDEV(RenderFoodRecomendation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 22\n    }, this), !isRecipeDone && /*#__PURE__*/_jsxDEV(RecipeDetailsButton, {\n      type: \"comidas\",\n      id: id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n_s(FoodsDetails, \"mfnC4enEHwNqHRQCy2eQnANmVZA=\");\n_c = FoodsDetails;\nFoodsDetails.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string\n    })\n  }).isRequired\n};\nexport default FoodsDetails;\nvar _c;\n$RefreshReg$(_c, \"FoodsDetails\");","map":{"version":3,"names":["React","useEffect","useContext","useState","PropTypes","getMealById","randomRecipe","RecipeDetailsButton","RecipeAppContext","RenderFoodDetails","RenderFoodIngred","RenderFoodInstruction","RenderFoodVideo","RenderFoodRecomendation","copy","require","FoodsDetails","props","match","params","id","click","setClick","meal","setMeal","recomDrink","setRecomDrink","setIsRecipeDone","isRecipeDone","setInProgressRecipes","copyLink","drinkId","endpoint","getMealDetails","meals","getRandomMeal","drinks","checkIsRecipeDone","arrayDoneRecipe","currentMeal","arrayLS","some","recipe","Number","idMeal","checkInRecipeInProgress","InProgress","Object","keys","checkedArray","recipeID","inProgressRecipesLS","JSON","parse","localStorage","getItem","DoneRecipesLS","checkedDoneRecipes","checkedInProgressRecipes","propTypes","shape","string","isRequired"],"sources":["/home/khazad/Development/sd-011-project-recipes-app/src/pages/FoodsDetails.js"],"sourcesContent":["import React, { useEffect, useContext, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport getMealById from '../services/getMealById';\nimport randomRecipe from '../services/randomRecipe';\nimport RecipeDetailsButton from '../components/RecipeDetailsButton';\nimport RecipeAppContext from '../context/RecipeAppContext';\nimport RenderFoodDetails from '../components/RenderFoodDetails';\nimport RenderFoodIngred from '../components/RenderFoodIngred';\nimport RenderFoodInstruction from '../components/RenderFoodInstruction';\nimport RenderFoodVideo from '../components/RenderFoodVideo';\nimport RenderFoodRecomendation from '../components/RenderFoodRecomendation';\n// import checkIsRecipeDone from '../components/checkIsRecipeDone';\n\nconst copy = require('clipboard-copy');\n\nfunction FoodsDetails(props) {\n  const { match: { params: { id } } } = props;\n  const [click, setClick] = useState(false);\n  const {\n    meal,\n    setMeal,\n    recomDrink,\n    setRecomDrink,\n    setIsRecipeDone,\n    isRecipeDone,\n    setInProgressRecipes,\n  } = useContext(RecipeAppContext);\n\n  function copyLink(drinkId) {\n    copy(`http://localhost:3000/comidas/${drinkId}`);\n    setClick(true);\n  }\n\n  useEffect(() => {\n    const endpoint = `https://www.themealdb.com/api/json/v1/1/lookup.php?i=${id}`;\n    const getMealDetails = async () => {\n      const { meals } = await getMealById(endpoint);\n      setMeal(meals[0]);\n    };\n\n    const getRandomMeal = async () => {\n      const { drinks } = await randomRecipe('thecocktaildb');\n      setRecomDrink(drinks);\n    };\n\n    getMealDetails();\n    getRandomMeal();\n  }, []);\n\n  function checkIsRecipeDone(arrayDoneRecipe, currentMeal) {\n    const arrayLS = arrayDoneRecipe && arrayDoneRecipe.some(\n      (recipe) => recipe.id === Number(currentMeal.idMeal),\n    );\n    return arrayLS;\n  }\n\n  function checkInRecipeInProgress(InProgress, currentMeal) {\n    const arrayLS = Object.keys(InProgress);\n    const checkedArray = arrayLS.some(\n      (recipeID) => recipeID === currentMeal.idMeal,\n    );\n    return checkedArray;\n  }\n\n  useEffect(() => {\n    const inProgressRecipesLS = JSON.parse(localStorage.getItem('inProgressRecipes'));\n    const DoneRecipesLS = JSON.parse(localStorage.getItem('doneRecipes'));\n    const checkedDoneRecipes = checkIsRecipeDone(DoneRecipesLS, meal);\n    setIsRecipeDone(checkedDoneRecipes);\n    if (inProgressRecipesLS && !checkedDoneRecipes) {\n      if (!inProgressRecipesLS.meals) return setInProgressRecipes(false);\n      const checkedInProgressRecipes = checkInRecipeInProgress(\n        inProgressRecipesLS.meals, meal,\n      );\n      setInProgressRecipes(checkedInProgressRecipes);\n    }\n  }, [meal]);\n\n  return (\n    <div>\n      {meal && <RenderFoodDetails copyLink={ copyLink } />}\n      <span>{click ? <p>Link copiado!</p> : null}</span>\n      {meal && <RenderFoodIngred />}\n      {meal && <RenderFoodInstruction />}\n      {meal && <RenderFoodVideo />}\n      {recomDrink && <RenderFoodRecomendation />}\n      {!isRecipeDone && <RecipeDetailsButton type=\"comidas\" id={ id } />}\n    </div>\n  );\n}\n\nFoodsDetails.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string,\n    }),\n  }).isRequired,\n};\n\nexport default FoodsDetails;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}