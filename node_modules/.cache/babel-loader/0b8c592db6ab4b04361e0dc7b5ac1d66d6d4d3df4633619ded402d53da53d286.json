{"ast":null,"code":"var _jsxFileName = \"/home/khazad/Development/sd-011-project-recipes-app/src/components/RenderDrinkProgress.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport '../css/RecipeInProgress.css';\nimport { useHistory } from 'react-router';\nimport shareIcon from '../images/shareIcon.svg';\nimport blackHeartIcon from '../images/blackHeartIcon.svg';\nimport whiteHeartIcon from '../images/whiteHeartIcon.svg';\nimport RecipeAppContext from '../context/RecipeAppContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst copy = require('clipboard-copy');\nfunction RenderDrinkProgress(_ref) {\n  _s();\n  let {\n    strDrinkThumb,\n    strDrink,\n    strCategory,\n    strInstructions,\n    id,\n    finalListIngredients,\n    classNameIngredients,\n    statusIngredients,\n    statusEndRecipeButton,\n    favoriteIcon,\n    setFavoriteIcon,\n    setHasChecked,\n    setStatusIngredients,\n    setClassNameIngredients,\n    setCountCheckIngredList,\n    countCheckIngredList,\n    numberIngredients,\n    setStatusEndRecipeButton,\n    hasChecked,\n    strAlcoholic\n  } = _ref;\n  const [click, setClick] = useState(false);\n  const history = useHistory();\n  const {\n    setFilteredRecipesDone\n  } = useContext(RecipeAppContext);\n  useEffect(() => {\n    if (hasChecked) {\n      const currentLocalStorage = JSON.parse(localStorage.getItem('inProgressRecipes')); // pego o LocalStorage atual\n      const newObject = {\n        ...currentLocalStorage,\n        cocktails: {\n          ...currentLocalStorage.cocktails,\n          [id]: statusIngredients\n        }\n      };\n      localStorage.setItem('inProgressRecipes', JSON.stringify(newObject));\n    }\n  }, [statusIngredients]);\n  useEffect(() => {\n    if (countCheckIngredList === numberIngredients) {\n      return setStatusEndRecipeButton(false);\n    }\n    return setStatusEndRecipeButton(true);\n  }, [countCheckIngredList, numberIngredients]);\n  function checkList(index) {\n    setHasChecked(true);\n    const currentStatusIngredients = [...statusIngredients];\n    if (statusIngredients[index] === true) {\n      currentStatusIngredients[Number(index)] = false;\n      setStatusIngredients(currentStatusIngredients);\n      setClassNameIngredients(prev => ({\n        ...prev,\n        [index]: 'notChecked'\n      }));\n      const newCount = countCheckIngredList - 1;\n      return setCountCheckIngredList(newCount);\n    }\n    currentStatusIngredients[Number(index)] = true;\n    setStatusIngredients(currentStatusIngredients);\n    setClassNameIngredients(prev => ({\n      ...prev,\n      [index]: 'yesChecked'\n    }));\n    const newCount = countCheckIngredList + 1;\n    return setCountCheckIngredList(newCount);\n  }\n  function copyLink(index) {\n    copy(`http://localhost:3000/bebidas/${index}`);\n    setClick(true);\n  }\n  function changeStatusIcon() {\n    if (favoriteIcon === whiteHeartIcon) {\n      setFavoriteIcon(blackHeartIcon);\n      let favoriteRecipes = JSON.parse(localStorage.getItem('favoriteRecipes'));\n      if (!favoriteRecipes) favoriteRecipes = [];\n      const newFavoriteRecipes = [...favoriteRecipes, {\n        id,\n        type: 'bebida',\n        area: '',\n        category: strCategory,\n        alcoholicOrNot: strAlcoholic,\n        name: strDrink,\n        image: strDrinkThumb\n      }];\n      localStorage.setItem('favoriteRecipes', JSON.stringify(newFavoriteRecipes));\n    }\n    if (favoriteIcon === blackHeartIcon) {\n      setFavoriteIcon(whiteHeartIcon);\n      const favoriteRecipes = JSON.parse(localStorage.getItem('favoriteRecipes'));\n      const newFavRecipes = favoriteRecipes.filter(recipe => recipe.id !== id);\n      localStorage.setItem('favoriteRecipes', JSON.stringify(newFavRecipes));\n    }\n  }\n  function createIngredArray() {\n    const finalList = finalListIngredients.map((ingredient, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n      \"data-testid\": `${index}-ingredient-step`,\n      className: classNameIngredients[index],\n      children: [ingredient, /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        id: index,\n        checked: statusIngredients[index],\n        onClick: event => checkList(event.target.id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this));\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: finalList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this);\n  }\n  function saveRecipeDoneInLocalStorage() {\n    const currentLocalStorage = JSON.parse(localStorage.getItem('doneRecipes')) || []; // pego o LocalStorage atual\n    const newRecipeDone = {\n      id,\n      type: 'bebida',\n      area: '',\n      category: strCategory,\n      alcoholicOrNot: strAlcoholic,\n      name: strDrink,\n      image: strDrinkThumb,\n      doneDate: '18/08/2021',\n      tags: []\n    };\n    const newRecipesDone = [...currentLocalStorage, newRecipeDone];\n    localStorage.setItem('doneRecipes', JSON.stringify(newRecipesDone));\n    setFilteredRecipesDone(newRecipesDone);\n    return history.push('/receitas-feitas');\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: strDrinkThumb,\n      alt: strDrink,\n      width: \"360px\",\n      height: \"300px\",\n      \"data-testid\": \"recipe-photo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      \"data-testid\": \"recipe-title\",\n      children: strDrink\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [' ', click ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Link copiado!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 19\n      }, this) : null, ' ']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"image\",\n      \"data-testid\": \"share-btn\",\n      src: shareIcon,\n      alt: \"compartilhar\",\n      onClick: () => copyLink(id)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this), ' ', /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"image\",\n      \"data-testid\": \"favorite-btn\",\n      src: favoriteIcon,\n      alt: \"bot\\xE3o favoritar\",\n      onClick: () => changeStatusIcon()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this), ' ', /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      \"data-testid\": \"recipe-category\",\n      children: strCategory\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: createIngredArray()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      \"data-testid\": \"instructions\",\n      children: strInstructions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      \"data-testid\": \"finish-recipe-btn\",\n      disabled: statusEndRecipeButton,\n      onClick: () => saveRecipeDoneInLocalStorage(),\n      children: \"Finalizar Receita\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 5\n  }, this);\n}\n_s(RenderDrinkProgress, \"2to4/N787IU+cgGsPU90wNS55hQ=\", false, function () {\n  return [useHistory];\n});\n_c = RenderDrinkProgress;\nRenderDrinkProgress.propTypes = {\n  strDrinkThumb: PropTypes.string.isRequired,\n  strDrink: PropTypes.string.isRequired,\n  strCategory: PropTypes.string.isRequired,\n  strInstructions: PropTypes.string.isRequired,\n  strAlcoholic: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  finalListIngredients: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  classNameIngredients: PropTypes.arrayOf(PropTypes.object).isRequired,\n  statusIngredients: PropTypes.arrayOf(PropTypes.object).isRequired,\n  statusEndRecipeButton: PropTypes.bool.isRequired,\n  favoriteIcon: PropTypes.string.isRequired,\n  setFavoriteIcon: PropTypes.func.isRequired,\n  setHasChecked: PropTypes.func.isRequired,\n  setStatusIngredients: PropTypes.func.isRequired,\n  setClassNameIngredients: PropTypes.func.isRequired,\n  setCountCheckIngredList: PropTypes.func.isRequired,\n  countCheckIngredList: PropTypes.number.isRequired,\n  numberIngredients: PropTypes.number.isRequired,\n  setStatusEndRecipeButton: PropTypes.func.isRequired,\n  hasChecked: PropTypes.bool.isRequired\n};\nexport default RenderDrinkProgress;\nvar _c;\n$RefreshReg$(_c, \"RenderDrinkProgress\");","map":{"version":3,"names":["React","useEffect","useState","useContext","PropTypes","useHistory","shareIcon","blackHeartIcon","whiteHeartIcon","RecipeAppContext","copy","require","RenderDrinkProgress","strDrinkThumb","strDrink","strCategory","strInstructions","id","finalListIngredients","classNameIngredients","statusIngredients","statusEndRecipeButton","favoriteIcon","setFavoriteIcon","setHasChecked","setStatusIngredients","setClassNameIngredients","setCountCheckIngredList","countCheckIngredList","numberIngredients","setStatusEndRecipeButton","hasChecked","strAlcoholic","click","setClick","history","setFilteredRecipesDone","currentLocalStorage","JSON","parse","localStorage","getItem","newObject","cocktails","setItem","stringify","checkList","index","currentStatusIngredients","Number","prev","newCount","copyLink","changeStatusIcon","favoriteRecipes","newFavoriteRecipes","type","area","category","alcoholicOrNot","name","image","newFavRecipes","filter","recipe","createIngredArray","finalList","map","ingredient","event","target","saveRecipeDoneInLocalStorage","newRecipeDone","doneDate","tags","newRecipesDone","push","propTypes","string","isRequired","arrayOf","shape","object","bool","func","number"],"sources":["/home/khazad/Development/sd-011-project-recipes-app/src/components/RenderDrinkProgress.js"],"sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport '../css/RecipeInProgress.css';\nimport { useHistory } from 'react-router';\nimport shareIcon from '../images/shareIcon.svg';\nimport blackHeartIcon from '../images/blackHeartIcon.svg';\nimport whiteHeartIcon from '../images/whiteHeartIcon.svg';\nimport RecipeAppContext from '../context/RecipeAppContext';\n\nconst copy = require('clipboard-copy');\n\nfunction RenderDrinkProgress({ strDrinkThumb, strDrink, strCategory,\n  strInstructions, id, finalListIngredients,\n  classNameIngredients, statusIngredients, statusEndRecipeButton,\n  favoriteIcon, setFavoriteIcon, setHasChecked,\n  setStatusIngredients, setClassNameIngredients,\n  setCountCheckIngredList, countCheckIngredList,\n  numberIngredients, setStatusEndRecipeButton, hasChecked, strAlcoholic }) {\n  const [click, setClick] = useState(false);\n  const history = useHistory();\n  const {\n    setFilteredRecipesDone,\n  } = useContext(RecipeAppContext);\n\n  useEffect(() => {\n    if (hasChecked) {\n      const currentLocalStorage = JSON.parse(localStorage.getItem('inProgressRecipes')); // pego o LocalStorage atual\n      const newObject = {\n        ...currentLocalStorage,\n        cocktails: {\n          ...currentLocalStorage.cocktails,\n          [id]: statusIngredients,\n        },\n      };\n      localStorage.setItem('inProgressRecipes', JSON.stringify(newObject));\n    }\n  }, [statusIngredients]);\n\n  useEffect(() => {\n    if ((countCheckIngredList === numberIngredients)) {\n      return setStatusEndRecipeButton(false);\n    }\n    return setStatusEndRecipeButton(true);\n  }, [countCheckIngredList, numberIngredients]);\n\n  function checkList(index) {\n    setHasChecked(true);\n    const currentStatusIngredients = [...statusIngredients];\n    if (statusIngredients[index] === true) {\n      currentStatusIngredients[Number(index)] = false;\n      setStatusIngredients(currentStatusIngredients);\n      setClassNameIngredients((prev) => ({ ...prev, [index]: 'notChecked' }));\n      const newCount = countCheckIngredList - 1;\n      return setCountCheckIngredList(newCount);\n    }\n    currentStatusIngredients[Number(index)] = true;\n    setStatusIngredients(currentStatusIngredients);\n    setClassNameIngredients((prev) => ({ ...prev, [index]: 'yesChecked' }));\n    const newCount = countCheckIngredList + 1;\n    return setCountCheckIngredList(newCount);\n  }\n\n  function copyLink(index) {\n    copy(`http://localhost:3000/bebidas/${index}`);\n    setClick(true);\n  }\n\n  function changeStatusIcon() {\n    if (favoriteIcon === whiteHeartIcon) {\n      setFavoriteIcon(blackHeartIcon);\n      let favoriteRecipes = JSON.parse(localStorage.getItem('favoriteRecipes'));\n      if (!favoriteRecipes) favoriteRecipes = [];\n      const newFavoriteRecipes = [\n        ...favoriteRecipes,\n        {\n          id,\n          type: 'bebida',\n          area: '',\n          category: strCategory,\n          alcoholicOrNot: strAlcoholic,\n          name: strDrink,\n          image: strDrinkThumb,\n        },\n      ];\n      localStorage.setItem('favoriteRecipes', JSON.stringify(newFavoriteRecipes));\n    }\n    if (favoriteIcon === blackHeartIcon) {\n      setFavoriteIcon(whiteHeartIcon);\n      const favoriteRecipes = JSON.parse(localStorage.getItem('favoriteRecipes'));\n      const newFavRecipes = favoriteRecipes.filter((recipe) => recipe.id !== id);\n      localStorage.setItem('favoriteRecipes', JSON.stringify(newFavRecipes));\n    }\n  }\n\n  function createIngredArray() {\n    const finalList = finalListIngredients.map((ingredient, index) => (\n      <li\n        key={ index }\n        data-testid={ `${index}-ingredient-step` }\n        className={ classNameIngredients[index] }\n      >\n        {ingredient}\n        <input\n          type=\"checkbox\"\n          id={ index }\n          checked={ statusIngredients[index] }\n          onClick={ (event) => checkList(event.target.id) }\n        />\n      </li>\n    ));\n    return (\n      <ul>{ finalList }</ul>\n    );\n  }\n\n  function saveRecipeDoneInLocalStorage() {\n    const currentLocalStorage = JSON.parse(localStorage.getItem('doneRecipes')) || []; // pego o LocalStorage atual\n    const newRecipeDone = {\n      id,\n      type: 'bebida',\n      area: '',\n      category: strCategory,\n      alcoholicOrNot: strAlcoholic,\n      name: strDrink,\n      image: strDrinkThumb,\n      doneDate: '18/08/2021',\n      tags: [],\n    };\n    const newRecipesDone = [\n      ...currentLocalStorage,\n      newRecipeDone,\n    ];\n    localStorage.setItem('doneRecipes', JSON.stringify(newRecipesDone));\n    setFilteredRecipesDone(newRecipesDone);\n    return history.push('/receitas-feitas');\n  }\n\n  return (\n    <div>\n      <img\n        src={ strDrinkThumb }\n        alt={ strDrink }\n        width=\"360px\"\n        height=\"300px\"\n        data-testid=\"recipe-photo\"\n      />\n      <h3 data-testid=\"recipe-title\">{ strDrink }</h3>\n      {' '}\n      <span>\n        {' '}\n        { click ? <p>Link copiado!</p> : null }\n        {' '}\n      </span>\n      <br />\n      <input\n        type=\"image\"\n        data-testid=\"share-btn\"\n        src={ shareIcon }\n        alt=\"compartilhar\"\n        onClick={ () => copyLink(id) }\n      />\n      {' '}\n      <br />\n      <input\n        type=\"image\"\n        data-testid=\"favorite-btn\"\n        src={ favoriteIcon }\n        alt=\"botão favoritar\"\n        onClick={ () => changeStatusIcon() }\n      />\n      {' '}\n      <br />\n      <p data-testid=\"recipe-category\">{ strCategory }</p>\n      <span>\n        { createIngredArray() }\n      </span>\n      <p data-testid=\"instructions\">{ strInstructions }</p>\n      <button\n        type=\"button\"\n        data-testid=\"finish-recipe-btn\"\n        disabled={ statusEndRecipeButton }\n        onClick={ () => saveRecipeDoneInLocalStorage() }\n      >\n        Finalizar Receita\n      </button>\n    </div>\n  );\n}\n\nRenderDrinkProgress.propTypes = {\n  strDrinkThumb: PropTypes.string.isRequired,\n  strDrink: PropTypes.string.isRequired,\n  strCategory: PropTypes.string.isRequired,\n  strInstructions: PropTypes.string.isRequired,\n  strAlcoholic: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  finalListIngredients: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  classNameIngredients: PropTypes.arrayOf(PropTypes.object).isRequired,\n  statusIngredients: PropTypes.arrayOf(PropTypes.object).isRequired,\n  statusEndRecipeButton: PropTypes.bool.isRequired,\n  favoriteIcon: PropTypes.string.isRequired,\n  setFavoriteIcon: PropTypes.func.isRequired,\n  setHasChecked: PropTypes.func.isRequired,\n  setStatusIngredients: PropTypes.func.isRequired,\n  setClassNameIngredients: PropTypes.func.isRequired,\n  setCountCheckIngredList: PropTypes.func.isRequired,\n  countCheckIngredList: PropTypes.number.isRequired,\n  numberIngredients: PropTypes.number.isRequired,\n  setStatusEndRecipeButton: PropTypes.func.isRequired,\n  hasChecked: PropTypes.bool.isRequired,\n};\n\nexport default RenderDrinkProgress;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}